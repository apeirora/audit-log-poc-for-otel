# This file is used to override the default values in
# https://raw.githubusercontent.com/open-telemetry/opentelemetry-helm-charts/refs/heads/main/charts/opentelemetry-demo/values.yaml.
components:
  accounting:
    enabled: false

  ad:
    enabled: true

  cart:
    enabled: false

  checkout:
    enabled: false

  currency:
    enabled: true

  email:
    enabled: false

  fraud-detection:
    enabled: false

  frontend:
    enabled: true

  frontend-proxy:
    enabled: true

  image-provider:
    enabled: true

  load-generator:
    enabled: true

  payment:
    enabled: false

  product-catalog:
    enabled: true

  quote:
    enabled: false

  recommendation:
    enabled: true
    imageOverride:
      repository: "ghcr.io/apeirora/audit-log-poc-for-otel/recommendation"
      tag: "latest"
      pullPolicy: Always

  shipping:
    enabled: false

  flagd:
    enabled: true
    sidecarContainers:
      - name: flagd-ui
        useDefault:
          env: true
        service:
          port: 4000
        env:
          - name: FLAGD_METRICS_EXPORTER
            value: otel
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://$(OTEL_COLLECTOR_NAME):4318
        resources:
          limits:
            memory: 300Mi
        volumeMounts:
          - name: config-rw
            mountPath: /app/data

  kafka:
    enabled: false

  valkey-cart:
    enabled: false

opentelemetry-collector:
  enabled: true
  #   - 4317:4317 # OTLP gRPC receiver
  #   - 4318:4318 # OTLP http receiver
  image:
    repository: "otel/opentelemetry-collector-contrib"
  fullnameOverride: otel-collector
  mode: deployment
  presets:
    kubernetesAttributes:
      enabled: false
  resources:
    limits:
      memory: 200Mi
  service:
    type: NodePort
  ports:
    metrics:
      enabled: false
  podAnnotations:
    prometheus.io/scrape: "true"
    opentelemetry_community_demo: "true"
  config:
    receivers:
      otlp:
        protocols:
          http:
            # Since this collector needs to receive data from the web, enable cors for all origins
            # `allowed_origins` can be refined for your deployment domain
            cors:
              allowed_origins:
                - "http://*"
                - "https://*"
      httpcheck/frontend-proxy:
        targets:
          - endpoint: http://frontend-proxy:8080

    exporters:
      debug:
        verbosity: detailed
      opensearch:
        logs_index: otel
        http:
          endpoint: http://opensearch:9200
          tls:
            insecure: true

    processors:
      # This processor is used to help limit high cardinality on next.js span names
      # When this PR is merged (and released) we can remove this transform processor
      # https://github.com/vercel/next.js/pull/64852
      transform:
        error_mode: ignore
        trace_statements:
          - context: span
            statements:
              # could be removed when https://github.com/vercel/next.js/pull/64852 is fixed upstream
              - replace_pattern(name, "\\?.*", "")
              - replace_match(name, "GET /api/products/*", "GET /api/products/{productId}")
      resource:
        attributes:
          - key: service.instance.id
            from_attribute: k8s.pod.uid
            action: insert

    service:
      pipelines:
        logs:
          processors: [memory_limiter, resource, batch]
          exporters: [opensearch, debug]

  extraVolumeMounts:
    - name: collector-volume
      mountPath: /collector-volume
  extraVolumes:
    - name: collector-volume
      emptyDir: {} # Only temporary storage in node filesystem
  extraContainers:
    - name: alpine-sidecar
      image: alpine:latest
      command: ["/bin/sh", "-c", "sleep infinity"]
      volumeMounts:
        - name: collector-volume
          mountPath: /collector-volume

jaeger:
  enabled: true

prometheus:
  enabled: true
  server:
    podAnnotations:
      sidecar.istio.io/inject: "false"

grafana:
  enabled: true

opensearch:
  enabled: true
